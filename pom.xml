<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0   http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <!-- use mvn install to create JMT installer and mvn package for single JAR -->
  <modelVersion>4.0.0</modelVersion>
  <groupId>jmt</groupId>
  <artifactId>jmt</artifactId>
  <version>latest</version>
  <properties>
    <izpack.version>5.1.3</izpack.version>
    <izpack.staging>${project.build.directory}/staging</izpack.staging>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>
  <distributionManagement>
    <repository>
      <id>internal.repo</id>
      <name>Temporary Staging Repository</name>
      <url>file://${project.build.directory}/../maven/mvn-artifact</url>
    </repository>
    <site>
      <id>site</id>
      <name>Project Site</name>
      <url>file://${project.build.directory}/../maven/site/</url>
    </site>
  </distributionManagement>
  <profiles>
    <profile>
      <id>full</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <!--suppress UnresolvedMavenProperty -->
        <finalName>JMT-${jmt.version}</finalName>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>2.19.1</version>
            <configuration>
              <excludes>
                <exclude>**/JabaGuiTest.class</exclude>
                <exclude>**/JmchGuiTest.class</exclude>
                <exclude>**/JmvaGuiTest.class</exclude>
                <exclude>**/JSIMgraphGuiTest.class</exclude>
                <exclude>**/JSIMwizGuiTest.class</exclude>
                <exclude>**/JwatGuiTest.class</exclude>
                <exclude>**/MainGuiTest.class</exclude>
                <exclude>**/TestWizardPanel.class</exclude>
                <exclude>**/AMVATest.class</exclude>
                <exclude>**/AnalyticalTest.class</exclude>
                <exclude>**/BatchTest.class</exclude>
                <exclude>**/CommandLineTest.class</exclude>
                <exclude>**/JmvaClosedModelTest.class</exclude>
                <exclude>**/JmvaMixedModelTest.class</exclude>
                <exclude>**/JmvaOpenModelTest.class</exclude>
                <exclude>**/PauseThreadTest.class</exclude>
                <exclude>**/RandomMVAModelGenerator.class</exclude>
                <exclude>**/ResultsCheck.class</exclude>
              </excludes>
              <skipTests>true</skipTests>
            </configuration>
          </plugin>
          <!-- Reading properties -->
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>properties-maven-plugin</artifactId>
            <version>1.0.0</version>
            <executions>
              <execution>
                <phase>initialize</phase>
                <goals>
                  <goal>read-project-properties</goal>
                </goals>
                <configuration>
                  <files>
                    <file>${basedir}/src/main/resources/jmt/common/globalsettings.conf</file>
                  </files>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>3.5.0</version>
          <configuration>
            <reportOutputDirectory>${basedir}/docs</reportOutputDirectory>
            <destDir>javadoc</destDir>
          </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.6.1</version>
            <configuration>
              <compilerVersion>1.8</compilerVersion>
              <source>1.8</source>
              <target>1.8</target>
              <excludes>
                <exclude>**/plugin/**</exclude>
              </excludes>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-shade-plugin</artifactId>
            <version>2.3</version>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>shade</goal>
                </goals>
                <configuration>
                  <finalName>JMT-singlejar-${jmt.version}</finalName>
                  <transformers>
                    <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                      <mainClass>jmt.gui.common.startScreen.GraphStartScreen</mainClass>
                    </transformer>
                  </transformers>
                  <dependencyReducedPomLocation>${basedir}/target/dependency-reduced-pom.xml</dependencyReducedPomLocation>
                  <filters>
                    <filter>
                      <artifact>*:*</artifact>
                      <excludes>
                        <exclude>META-INF/*.SF</exclude>
                        <exclude>META-INF/*.DSA</exclude>
                        <exclude>META-INF/*.RSA</exclude>
                      </excludes>
                    </filter>
                  </filters>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.8</version>
            <executions>
              <execution>
                <id>create-staging-area</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <tasks>
                    <copy todir="${izpack.staging}">
                      <fileset dir="${basedir}/src/main/resources/jmt/izpack"/>
                    </copy>
                    <copy todir="${izpack.staging}/manuals">
                      <fileset dir="${basedir}/manuals"/>
                    </copy>
                    <copy todir="${izpack.staging}/jwatFormats">
                      <fileset dir="${basedir}/jwatFormats"/>
                    </copy>
                    <copy todir="${izpack.staging}/examples">
                      <fileset dir="${basedir}/examples"/>
                    </copy>
                    <copy todir="${izpack.staging}/license">
                      <fileset dir="${basedir}/license"/>
                    </copy>
                    <copy file="${project.build.directory}/JMT-singlejar-${jmt.version}.jar" tofile="${izpack.staging}/JMT.jar"/>
                    <copy file="${basedir}/license/LICENSE_JMT.txt" tofile="${izpack.staging}/LICENSE_JMT.txt"/>
                  </tasks>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.izpack</groupId>
            <artifactId>izpack-maven-plugin</artifactId>
            <version>${izpack.version}</version>
            <!-- Rest of your izpack plugin configuration -->
            <configuration>
              <installFile>${izpack.staging}/jmt_install.xml</installFile>
              <attach>false</attach>
              <kind>standard</kind>
              <descriptorEncoding>UTF-8</descriptorEncoding>
              <izpackBasedir>${izpack.staging}</izpackBasedir>
              <customPanelDirectory>${izpack.staging}</customPanelDirectory>
              <finalName>JMT-installer-${jmt.version}</finalName>
              <classifier>final</classifier>
            </configuration>
            <executions>
              <execution>
                <id>standard-installer</id>
                <phase>deploy</phase>
                <goals>
                  <goal>izpack</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <!-- Do not deploy any of the installer artifacts. -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-deploy-plugin</artifactId>
            <version>2.8.2</version>
            <configuration>
              <skip>false</skip>
              <altDeploymentRepository>
                internal.repo::default::file://${project.build.directory}/../maven/mvn-artifact
              </altDeploymentRepository>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>jmva</id>
      <activation>
        <property>
          <name>mode</name>
          <value>jmva</value>
        </property>
      </activation>
      <build>
        <finalName>JMVA-${jmt.version}</finalName>
        <plugins>
          <!-- Reading properties -->
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>properties-maven-plugin</artifactId>
            <version>1.0.0</version>
            <executions>
              <execution>
                <phase>initialize</phase>
                <goals>
                  <goal>read-project-properties</goal>
                </goals>
                <configuration>
                  <files>
                    <file>${basedir}/src/main/resources/jmt/common/globalsettings.conf</file>
                  </files>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!-- we want JDK 1.7 source and binary compatibility -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>2.3.2</version>
            <configuration>
              <compilerVersion>1.7</compilerVersion>
              <source>1.7</source>
              <target>1.7</target>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-shade-plugin</artifactId>
            <version>2.3</version>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>shade</goal>
                </goals>
                <configuration>
                  <transformers>
                    <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                      <mainClass>jmt.jmva.gui.JMVAWizard</mainClass>
                    </transformer>
                  </transformers>
                  <filters>
                    <filter>
                      <artifact>*:*</artifact>
                      <excludes>
                        <exclude>META-INF/*.SF</exclude>
                        <exclude>META-INF/*.DSA</exclude>
                        <exclude>META-INF/*.RSA</exclude>
                      </excludes>
                    </filter>
                  </filters>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!-- Do not deploy any of the installer artifacts. -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-deploy-plugin</artifactId>
            <version>2.8.2</version>
            <configuration>
              <skip>true</skip>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
  <repositories>
    <repository>
      <id>local-repo</id>
      <url>file:${project.basedir}/repo</url>
    </repository>
    <repository>
      <id>kpc-toolbox-java-mvn-repo</id>
      <url>https://raw.githubusercontent.com/imperial-qore/kpc-toolbox-java/main/mvn-artifact/</url>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>always</updatePolicy>
      </snapshots>
    </repository>
  </repositories>
  <dependencies>
    <dependency>
      <groupId>org.qore</groupId>
      <artifactId>kpc-toolbox-java</artifactId>
      <version>1.0.0</version>
    </dependency>
    <dependency>
      <groupId>org.freehep</groupId>
      <artifactId>freehep-graphics2d</artifactId>
      <version>2.4</version>
    </dependency>
    <dependency>
      <groupId>org.freehep</groupId>
      <artifactId>freehep-graphicsbase</artifactId>
      <version>2.4</version>
    </dependency>
    <dependency>
      <groupId>org.freehep</groupId>
      <artifactId>freehep-graphicsio</artifactId>
      <version>2.4</version>
    </dependency>
    <dependency>
      <groupId>org.freehep</groupId>
      <artifactId>freehep-graphicsio-emf</artifactId>
      <version>2.4</version>
    </dependency>
    <dependency>
      <groupId>org.freehep</groupId>
      <artifactId>freehep-graphicsio-swf</artifactId>
      <version>2.4</version>
    </dependency>
    <dependency>
      <groupId>org.freehep</groupId>
      <artifactId>freehep-graphicsio-svg</artifactId>
      <version>2.4</version>
    </dependency>
    <dependency>
      <groupId>org.freehep</groupId>
      <artifactId>freehep-graphicsio-pdf</artifactId>
      <version>2.4</version>
    </dependency>
    <dependency>
      <groupId>org.freehep</groupId>
      <artifactId>freehep-graphicsio-ps</artifactId>
      <version>2.4</version>
    </dependency>
    <dependency>
      <groupId>org.freehep</groupId>
      <artifactId>freehep-graphicsio-java</artifactId>
      <version>2.4</version>
    </dependency>
    <dependency>
      <groupId>org.uispec4j</groupId>
      <artifactId>uispec4j</artifactId>
      <version>2.4</version>
    </dependency>
    <dependency>
      <groupId>oro</groupId>
      <artifactId>oro</artifactId>
      <version>2.0.8</version>
    </dependency>
    <dependency>
      <groupId>gov.nist.math</groupId>
      <artifactId>jama</artifactId>
      <version>1.0.1</version>
    </dependency>
    <dependency>
      <groupId>jgraph</groupId>
      <artifactId>jgraph</artifactId>
      <version>5.10.2.0</version>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.17</version>
    </dependency>
    <dependency>
      <groupId>com.jgoodies</groupId>
      <artifactId>looks</artifactId>
      <version>2.2.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.pdfbox</groupId>
      <artifactId>pdfbox</artifactId>
      <version>2.0.24</version>
    </dependency>
    <dependency>
      <groupId>ptolemy</groupId>
      <artifactId>ptolemy</artifactId>
      <version>1.0.0</version>
    </dependency>
    <dependency>
      <groupId>xerces</groupId>
      <artifactId>xercesImpl</artifactId>
      <version>2.12.2</version>
    </dependency>
    <dependency>
      <groupId>org.easytesting</groupId>
      <artifactId>fest-swing</artifactId>
      <version>1.2.1</version>
    </dependency>
    <dependency>
      <groupId>xml-apis</groupId>
      <artifactId>xml-apis</artifactId>
      <version>1.4.01</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>1.3.2</version>
    </dependency>
    <dependency>
      <groupId>colt</groupId>
      <artifactId>colt</artifactId>
      <version>1.2.0</version>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>2.6</version>
    </dependency>
    <dependency>
      <groupId>org.swinglabs</groupId>
      <artifactId>swingx</artifactId>
      <version>1.6.1</version>
    </dependency>
    <dependency>
      <groupId>fr.lip6.pnml</groupId>
      <artifactId>fr.lip6.pnml.framework.3rdpartimports</artifactId>
      <version>2.2.12</version>
    </dependency>
    <dependency>
      <groupId>fr.lip6.pnml</groupId>
      <artifactId>fr.lip6.pnml.framework.utils</artifactId>
      <version>2.2.12</version>
    </dependency>
    <dependency>
      <groupId>fr.lip6.pnml</groupId>
      <artifactId>fr.lip6.pnml.framework.coremodel</artifactId>
      <version>2.2.12</version>
    </dependency>
    <dependency>
      <groupId>fr.lip6.pnml</groupId>
      <artifactId>fr.lip6.pnml.framework.ptnet</artifactId>
      <version>2.2.12</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.emf</groupId>
      <artifactId>org.eclipse.emf.ecore</artifactId>
      <version>2.12.0</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.emf</groupId>
      <artifactId>org.eclipse.emf.ecore.xmi</artifactId>
      <version>2.12.0</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.emf</groupId>
      <artifactId>org.eclipse.emf.codegen</artifactId>
      <version>2.11.0</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.emf</groupId>
      <artifactId>org.eclipse.emf.codegen.ecore</artifactId>
      <version>2.12.0</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.emf</groupId>
      <artifactId>org.eclipse.emf.common</artifactId>
      <version>2.12.0</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse</groupId>
      <artifactId>ocl</artifactId>
      <version>3.6.100</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.ocl</groupId>
      <artifactId>ecore</artifactId>
      <version>3.6.100</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.ocl</groupId>
      <artifactId>common</artifactId>
      <version>1.4.100</version>
    </dependency>
    <dependency>
      <groupId>lpg.runtime</groupId>
      <artifactId>java</artifactId>
      <version>2.0.17</version>
    </dependency>
    <dependency>
      <groupId>com.github.jai-imageio</groupId>
      <artifactId>jai-imageio-core</artifactId>
      <version>1.4.0</version>
    </dependency>
    <dependency>
      <groupId>com.github.jai-imageio</groupId>
      <artifactId>jai-imageio-jpeg2000</artifactId>
      <version>1.3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.pdfbox</groupId>
      <artifactId>jbig2-imageio</artifactId>
      <version>3.0.3</version>
    </dependency>
      <dependency>
          <groupId>org.junit.jupiter</groupId>
          <artifactId>junit-jupiter</artifactId>
          <version>RELEASE</version>
          <scope>compile</scope>
      </dependency>
  </dependencies>
</project>
